<html>
<body>
<%
# Generator bafera za parčiće fajlova
def fbuffer(f, chunk_size=10000):
   while True:
      chunk = f.read(chunk_size)
      if not chunk: break
      yield chunk

if form.has_key('file') and form['file'].filename:
   # Ugnježdeno polje objekta drži fajl
   fileitem = form['file']

   try: # Windows-u je potreban stdio set za binari mod.
      import msvcrt
      msvcrt.setmode (0, os.O_BINARY) # stdin  = 0
      msvcrt.setmode (1, os.O_BINARY) # stdout = 1
   except ImportError:
      pass

   # strip "drži" putanju od imena fajla da bi se sprečili napadi na direktorijum
   fname = os.path.basename(fileitem.filename)

   # gradi apsolutnu putanju do skladišta
   dir_path = os.path.join(os.path.dirname(req.filename), 'podaci')

   f = open(os.path.join(dir_path, fname), 'wb', 10000)

   # Čita fajl iz parčića
   for chunk in fbuffer(fileitem.file):
      f.write(chunk)
   f.close()
message = 'Datoteka "%s" je uspešno uploadovana!' % fname
%>
<p><%= message %></p>
<p><a href="">Upload-uj sledeću datoteku!</a></p>
<%
else:
   #
%>
<form enctype="multipart/form-data" action="" method="post">
<p>Fajl: <input type="file" name="file"></p>
<p><input type="submit" value="Upload-uj"></p>
</form>
<%
#
%>
</body>
</html>
